version: "3"

services:
  chirpstack:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chirpstack-application-server.entrypoints=web"
      - "traefik.http.routers.chirpstack-application-server.rule=Host(`chirpstack.uat.ding.hu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.chirpstack-application-server.middlewares=chirpstackredirect-to-https"
      - "traefik.http.routers.chirpstack-application-server-secure.entrypoints=websecure"
      - "traefik.http.routers.chirpstack-application-server-secure.rule=Host(`chirpstack.uat.ding.hu`)"
      - "traefik.http.routers.chirpstack-application-server-secure.tls=true"
      - "traefik.http.routers.chirpstack-application-server-secure.tls.certresolver=http"
      - "traefik.http.routers.chirpstack-application-server-secure.service=chirpstack-application-server"
      - "traefik.http.services.chirpstack-application-server.loadbalancer.server.port=8080"
      - "traefik.docker.network=gateway-network"
    networks:
      - gateway-network
      - chirpstack-network

  chirpstack-gateway-bridge-basicstation:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    command: -c /etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge-basicstation-eu868.toml
    ports:
      - 3001:3001
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    depends_on:
      - mosquitto
    networks:
      - chirpstack-network

  chirpstack-rest-api:
    image: chirpstack/chirpstack-rest-api:4
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chirpstack-rest-api.entrypoints=web"
      - "traefik.http.routers.chirpstack-rest-api.rule=Host(`chirpstack-api.uat.ding.hu`)"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.chirpstack-rest-api.middlewares=redirect-to-https"
      - "traefik.http.routers.chirpstack-rest-api-secure.entrypoints=websecure"
      - "traefik.http.routers.chirpstack-rest-api-secure.rule=Host(`chirpstack-api.uat.ding.hu`)"
      - "traefik.http.routers.chirpstack-rest-api-secure.tls=true"
      - "traefik.http.routers.chirpstack-rest-api-secure.tls.certresolver=http"
      - "traefik.http.routers.chirpstack-rest-api-secure.service=chirpstack-rest-api"
      - "traefik.http.services.chirpstack-rest-api.loadbalancer.server.port=8080"
      - "traefik.docker.network=gateway-network"
    depends_on:
      - chirpstack
    networks:
      - gateway-network
      - chirpstack-network

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
    networks:
      - chirpstack-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - chirpstack-network

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    volumes: 
      - ./configuration/mosquitto/config/:/mosquitto/config/
    networks:
      - gateway-network
      - chirpstack-network

volumes:
  postgresqldata:
  redisdata:

networks:
  gateway-network:
    external: true
  chirpstack-network:
    
